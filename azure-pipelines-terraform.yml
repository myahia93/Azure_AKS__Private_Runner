trigger:
  - none

variables:
  tf_version: 1.3.7
  backend_rg: "TO_BE_DEFINED"
  backend_str: "TO_BE_DEFINED"
  backend_ctn: "TO_BE_DEFINED"
  backend_key: "terraform.tfstate"

stages:
  - stage: Terraform_CI

    pool:
      vmImage: ubuntu-latest

    jobs:
      - job: terraform_validate

        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Use Terraform $(tf_version)
            inputs:
              terraformVersion: $(tf_version)

          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
              backendServiceArm: "TO_BE_DEFINED"
              backendAzureRmResourceGroupName: $(backend_rg)
              backendAzureRmStorageAccountName: $(backend_str)
              backendAzureRmContainerName: $(backend_ctn)
              backendAzureRmKey: $(backend_key)

          - task: TerraformTaskV4@4
            displayName: Terraform Validate
            inputs:
              provider: "azurerm"
              command: "validate"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"

      - job: terraform_plan

        dependsOn: terraform_validate
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Use Terraform $(tf_version)
            inputs:
              terraformVersion: $(tf_version)

          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
              backendServiceArm: "TO_BE_DEFINED"
              backendAzureRmResourceGroupName: $(backend_rg)
              backendAzureRmStorageAccountName: $(backend_str)
              backendAzureRmContainerName: $(backend_ctn)
              backendAzureRmKey: $(backend_key)

          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: "azurerm"
              command: "plan"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
              commandOptions: '-out "planfile"'
              environmentServiceNameAzureRM: "TO_BE_DEFINED"

          - task: PublishBuildArtifacts@1
            displayName: Upload planfile
            inputs:
              PathtoPublish: "$(System.DefaultWorkingDirectory)/Terraform/"
              ArtifactName: "drop"
              publishLocation: "Container"

      - job: manual_intervention
        displayName: Wait for terraform plan validation
        dependsOn: terraform_plan
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
          - task: ManualValidation@0
            inputs:
              notifyUsers: "mohcine.yahia@fujitsu.com"
              instructions: |
                you should validate the Terraform Plan file
                $(Build.BuildId)

  - stage: Terraform_CD

    pool:
      vmImage: ubuntu-latest

    jobs:
      - job: terraform_apply

        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Download planfile
            inputs:
              buildType: "current"
              downloadType: "specific"
              itemPattern: "drop/planfile"
              downloadPath: "$(System.ArtifactsDirectory)"

          - task: CopyFiles@2
            displayName: Copy planfile
            inputs:
              SourceFolder: "$(System.ArtifactsDirectory)/drop"
              Contents: "planfile"
              TargetFolder: "$(System.DefaultWorkingDirectory)/Terraform"

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Use Terraform $(tf_version)
            inputs:
              terraformVersion: $(tf_version)

          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
              backendServiceArm: "TO_BE_DEFINED"
              backendAzureRmResourceGroupName: $(backend_rg)
              backendAzureRmStorageAccountName: $(backend_str)
              backendAzureRmContainerName: $(backend_ctn)
              backendAzureRmKey: $(backend_key)

          - task: TerraformTaskV4@4
            displayName: Terraform Apply
            inputs:
              provider: "azurerm"
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
              commandOptions: "planfile"
              environmentServiceNameAzureRM: "TO_BE_DEFINED"
